CREATE OR REPLACE VIEW "public"."project_top" AS (with "project_topic_cte" as (select "project_topic"."project_id", json_agg(json_build_object('id', "topic"."id", 'name', "topic"."name")) as "topics", array_agg("topic"."id") as "topic_ids" from "project_topic" inner join "topic" on "topic"."id" = "project_topic"."topic_id" group by "project_topic"."project_id"), "project_file_cte" as (select "project_file"."project_id", json_agg(json_build_object('id', "file"."id", 'isNsfw', "file"."is_nsfw")) as "files", array_agg("file"."id") as "file_ids" from "project_file" inner join "file" on "file"."id" = "project_file"."file_id" group by "project_file"."project_id"), "project_donation_cte" as (select "project_donation"."project_id", sum("donation"."amount") as "amount", sum("donation"."value") as "value" from "project_donation" inner join "donation" on "donation"."id" = "project_donation"."donation_id" group by "project_donation"."project_id") select "project"."id", "project"."title", "project"."description", "project"."created_at", "project"."deadline", case when "project"."thumbnail_file_id" is not null then json_build_object('id', "project_thumbnail_file"."id", 'bucket', "project_thumbnail_file"."bucket", 'isNsfw', "project_thumbnail_file"."is_nsfw") else null end as "thumbnail", case when "project"."is_canceled" = true then 'canceled' when "amount" >= "project"."goal" then 'completed' when "project"."deadline" <= NOW() then 'failed' else 'open' end as "status", "project"."goal", "project"."quotation", coalesce("amount", 0) as "donations_amount", coalesce("value", 0) as "donations_value", coalesce((select count(*) from "favorite_project" where "favorite_project"."project_id" = "project"."id"), 0) as "favorites", "user"."id" as "creator_id", json_build_object('id', "user"."id", 'username', "user"."username", 'displayName', "user"."display_name", 'profilePic', case when "user"."profile_pic_file_id" is not null then json_build_object('id', "profile_pic_file"."id", 'bucket', "profile_pic_file"."bucket", 'isNsfw', "profile_pic_file"."is_nsfw") else null end) as "creator", coalesce(case when "user_integration"."mercado_pago_refresh_token" is not null then true else null end, false) as "has_mercado_pago", coalesce("topics", '[]'::json) as "topics", coalesce("topic_ids", ARRAY[]::smallint[]) as "topic_ids", coalesce("files", '[]'::json) as "files", coalesce((select count(*) from "project_interaction" where "project_interaction"."project_id" = "project"."id"), 0) as "interactions" from "project" left join "file" "project_thumbnail_file" on "project_thumbnail_file"."id" = "project"."thumbnail_file_id" inner join "user" on "user"."id" = "project"."creator_id" inner join "user_integration" on "user_integration"."id" = "project"."creator_id" left join "file" "profile_pic_file" on "profile_pic_file"."id" = "user"."profile_pic_file_id" left join "project_topic_cte" on "project_topic_cte"."project_id" = "project"."id" left join "project_file_cte" on "project_file_cte"."project_id" = "project"."id" left join "project_donation_cte" on "project_donation_cte"."project_id" = "project"."id");