CREATE OR REPLACE VIEW "public"."creator_top" AS (with "user_topic_cte" as (select "user_topic"."user_id", json_agg(json_build_object('id', "topic"."id", 'name', "topic"."name")) as "topics", array_agg("topic"."id") as "topic_ids" from "user_topic" inner join "topic" on "topic"."id" = "user_topic"."topic_id" group by "user_topic"."user_id"), "creator_donation_cte" as (select "creator_donation"."creator_id", sum("donation"."amount") as "amount", sum("donation"."value") as "value" from "creator_donation" inner join "donation" on "donation"."id" = "creator_donation"."donation_id" group by "creator_donation"."creator_id"), "creator_last_day_donation_cte" as (select "creator_donation"."creator_id", sum("donation"."amount") as "last_day_amount", sum("donation"."value") as "last_day_value" from "creator_donation" inner join "donation" on "donation"."id" = "creator_donation"."donation_id" where "donation"."created_at" >= NOW() - interval '1 day' group by "creator_donation"."creator_id") select "user"."id", "user"."username", "user"."display_name" as "display_name", "user"."created_at" as "created_at", case when "user"."profile_pic_file_id" is not null then json_build_object('id', "profile_pic_file"."id", 'bucket', "profile_pic_file"."bucket", 'isNsfw', "profile_pic_file"."is_nsfw") else null end as "profile_pic", case when "user"."profile_banner_file_id" is not null then json_build_object('id', "profile_banner_file"."id", 'bucket', "profile_banner_file"."bucket", 'isNsfw', "profile_banner_file"."is_nsfw") else null end as "profile_banner", "user_detail"."description" as "description", "user_detail"."custom_thanks" as "custom_thanks", "user_detail"."location" as "location", "user_detail"."quotation" as "quotation", "user_detail"."personal_url" as "personal_url", "user_detail"."instagram_user" as "instagram_user", "user_detail"."facebook_user" as "facebook_user", "user_detail"."x_user" as "x_user", "user_detail"."tiktok_user" as "tiktok_user", "user_detail"."github_user" as "github_user", coalesce("amount", 0) as "donations_amount", coalesce("value", 0) as "donations_value", coalesce("last_day_amount", 0) as "last_day_donations_amount", coalesce("last_day_value", 0) as "last_day_donations_value", coalesce(case when "user_integration"."mercado_pago_refresh_token" is not null then true else null end, false) as "has_mercado_pago", coalesce((select count(*) from "favorite_creator" where "favorite_creator"."creator_id" = "user"."id"), 0) as "favorites", coalesce("topics", '[]'::json) as "topics", coalesce("topic_ids", ARRAY[]::smallint[]) as "topic_ids", coalesce((select count(*) from "creator_interaction" where "creator_interaction"."creator_id" = "user"."id"), 0) as "interactions" from "user" inner join "user_detail" on "user_detail"."id" = "user"."id" inner join "user_integration" on "user_integration"."id" = "user"."id" left join "file" "profile_pic_file" on "profile_pic_file"."id" = "user"."profile_pic_file_id" left join "file" "profile_banner_file" on "profile_banner_file"."id" = "user"."profile_banner_file_id" left join "user_topic_cte" on "user_topic_cte"."user_id" = "user"."id" left join "creator_donation_cte" on "creator_donation_cte"."creator_id" = "user"."id" left join "creator_last_day_donation_cte" on "creator_last_day_donation_cte"."creator_id" = "user"."id");